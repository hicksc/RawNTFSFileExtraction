Index: qemu-kvm-0.12.3+noroms/vl
===================================================================
--- qemu-kvm-0.12.3+noroms.orig/vl.c	2010-05-03 03:02:03.659384654 -0400
+++ qemu-kvm-0.12.3+noroms/vl.c	2010-05-03 10:03:33.986260166 -0400
@@ -307,6 +307,12 @@
     { .driver = "vmware-svga",          .flag = &default_vga       },
 };

+#include <syslog.h>
+#include <sys/socket.h>
+#include <sys/un.h>
+extern int write_log_socket;
+struct sockaddr_un write_log_name = { AF_UNIX, "\x00" };

 static int default_driver_check(QemuOpts *opts, void *opaque)
 {
     const char *driver = qemu_opt_get(opts, "driver");
@@ -5595,6 +5601,8 @@
                             " Wrong format.\n");
                     exit(1);
                 }
+
+		snprintf(write_log_name.sun_path, sizeof(write_log_name.sun_path), "/var/run/fatwatch-%s", optarg);
                 break;
 #ifndef _WIN32
 	    case QEMU_OPTION_daemonize:
@@ -5755,6 +5763,31 @@
         }
     }

+    if (write_log_name.sun_path[0]) {
+	int flags;
+
+	if ((write_log_socket = socket(AF_UNIX, SOCK_DGRAM, 0)) < 0) {
+	    syslog(LOG_DEBUG | LOG_USER, "write_log: Failed to create socket: %m");
+	}
+
+	if ((flags = fcntl(write_log_socket, F_GETFL, 0)) < 0) {
+	    syslog(LOG_DEBUG | LOG_USER, "write_log: Failed to get socket flags: %m");
+	} else {
+	    if (fcntl(write_log_socket, F_SETFL, O_NONBLOCK | flags) < 0) {
+		syslog(LOG_DEBUG | LOG_USER, "write_log: Failed to set socket flags: %m");
+	    }
+	}
+
+	write_log_name.sun_family = AF_UNIX;
+	if (connect(write_log_socket, &write_log_name, sizeof(write_log_name)) < 0) {
+	    syslog(LOG_DEBUG | LOG_USER, "write_log: Failed to connect: %m");
+	    close(write_log_socket);
+	    write_log_socket = -1;
+	}
+    } else {
+	syslog(LOG_DEBUG | LOG_USER, "write_log: No UUID set");
+    }
+
     /* If no data_dir is specified then try to find it relative to the
        executable path.  */
     if (!data_dir) {
Index: qemu-kvm-0.12.3+noroms/linux-aio.c
===================================================================
--- qemu-kvm-0.12.3+noroms.orig/linux-aio.c	2010-05-03 03:01:58.309384614 -0400
+++ qemu-kvm-0.12.3+noroms/linux-aio.c	2010-05-03 10:04:23.236257637 -0400
@@ -15,6 +15,10 @@
 #include <sys/eventfd.h>
 #include <libaio.h>

+#include <syslog.h>
+#include <sys/socket.h>
+extern int write_log_socket;
+
 /*
  * Queue size (per-device).
  *
@@ -65,6 +69,17 @@
         else if (ret >= 0)
             ret = -EINVAL;

+	if (write_log_socket != -1 &&
+	    ret == 0 &&
+	    laiocb->iocb.aio_lio_opcode == IO_CMD_PWRITE) {
+	    int64_t d[2];
+	    d[0] = laiocb->iocb.u.c.offset;
+	    d[1] = laiocb->iocb.u.c.nbytes;
+	    if (send(write_log_socket, (void *)&d, sizeof(d), 0) < 0) {
+	      syslog(LOG_DEBUG | LOG_USER, "write_log: Failed to log write in qemu_laio_process_completion: %m");
+	    }
+	}
+
         laiocb->common.cb(laiocb->common.opaque, ret);
     }

Index: qemu-kvm-0.12.3+noroms/posix-aio-compat.c
===================================================================
--- qemu-kvm-0.12.3+noroms.orig/posix-aio-compat.c	2010-05-03 03:01:58.336300448 -0400
+++ qemu-kvm-0.12.3+noroms/posix-aio-compat.c	2010-05-03 10:04:36.116716224 -0400
@@ -30,6 +30,10 @@

 #include "block/raw-posix-aio.h"

+#include <syslog.h>
+#include <sys/socket.h>
+extern int write_log_socket;
+

 struct qemu_paiocb {
     BlockDriverAIOCB common;
@@ -460,6 +464,18 @@
                 acb->common.cb(acb->common.opaque, ret);
                 qemu_aio_release(acb);
                 result = 1;
+
+		if (write_log_socket != -1 &&
+		    !ret &&
+		    (acb->aio_type & QEMU_AIO_TYPE_MASK) == QEMU_AIO_WRITE) {
+		  int64_t d[2];
+		  d[0] = acb->aio_offset;
+		  d[1] = acb->aio_nbytes;
+		  if (send(write_log_socket, (void *)&d, sizeof(d), 0) < 0) {
+		    syslog(LOG_DEBUG | LOG_USER, "write_log: Failed to log write in qemu_laio_process_completion: %m");
+		  }
+		}
+
                 break;
             } else {
                 pacb = &acb->next;
Index: qemu-kvm-0.12.3+noroms/block.c
===================================================================
--- qemu-kvm-0.12.3+noroms.orig/block.c	2010-05-03 09:52:21.769383871 -0400
+++ qemu-kvm-0.12.3+noroms/block.c	2010-05-03 10:03:54.486266392 -0400
@@ -42,6 +42,10 @@
 #include <windows.h>
 #endif

+#include <syslog.h>
+#include <sys/socket.h>
+int write_log_socket = -1;
+
 static BlockDriverAIOCB *bdrv_aio_readv_em(BlockDriverState *bs,
         int64_t sector_num, QEMUIOVector *qiov, int nb_sectors,
         BlockDriverCompletionFunc *cb, void *opaque);
@@ -671,6 +675,7 @@
                const uint8_t *buf, int nb_sectors)
 {
     BlockDriver *drv = bs->drv;
+    int ret;
     if (!bs->drv)
         return -ENOMEDIUM;
     if (bs->read_only)
@@ -682,7 +687,18 @@
         set_dirty_bitmap(bs, sector_num, nb_sectors, 1);
     }

-    return drv->bdrv_write(bs, sector_num, buf, nb_sectors);
+    ret = drv->bdrv_write(bs, sector_num, buf, nb_sectors);
+
+    if (write_log_socket != 1 &&
+	ret >= 0) {
+      int64_t d[2];
+      d[0] = sector_num * 512;
+      d[1] = nb_sectors * 512;
+      if (send(write_log_socket, (void *)&d, sizeof(d), 0) < 0)
+	syslog(LOG_DEBUG | LOG_USER, "write_log: Failed to log write in bdrv_write: %m");
+    }
+
+    return ret;
 }

 int bdrv_pread(BlockDriverState *bs, int64_t offset,
